version: '3'
services:
  agent:
    image: "datadog/agent:6.12.1"
    environment:
      - DD_API_KEY
      - DD_APM_ENABLED=true
      # - DD_LOGS_ENABLED=true
      # - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      # - DD_PROCESS_AGENT_ENABLED=true
      - DD_TAGS='env:apm-workshop'
    ports:
      - "8126:8126"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    labels:
      com.datadoghq.ad.logs: '[{"source": "datadog-agent", "service": "agent"}]'

  frontend:
    environment:
      - FLASK_APP=api.py
      - FLASK_DEBUG=1
      - DATADOG_SERVICE_NAME=iot-frontend
      - DATADOG_TRACE_AGENT_HOSTNAME=agent
      # - DD_LOGS_INJECTION=true
      # - DD_ANALYTICS_ENABLED=true
    # image: "brettlangdon/distributed-tracing-workshop-frontend:latest"
    build: ./frontend
    command: ddtrace-run flask run --port=5000 --host=0.0.0.0
    ports:
      - "5000:5000"
    volumes:
      - "./frontend/frontend:/app"
    depends_on:
      - agent
      - db
      - node
      - pumps
      - sensors
    labels:
      com.datadoghq.ad.logs: '[{"source": "python", "service": "iot-frontend"}]'

  node:
    environment:
      - DD_SERVICE_NAME=users-api
      - DD_TRACE_AGENT_HOSTNAME=agent
      # - DD_LOGS_INJECTION=true
      # - DD_TRACE_ANALYTICS_ENABLED=true
    # image: "brettlangdon/distributed-tracing-workshop-node-api:latest"
    build: ./node-api
    ports:
      - "5004:5004"
    # uncomment below to live develop node
    # volumes:
    #   - "./node-api:/app"
    #   - /app/node_modules
    depends_on:
      - agent
      - redis
    labels:
      com.datadoghq.ad.logs: '[{"source": "nodejs", "service": "users-api"}]'

  pumps:
    environment:
      - FLASK_APP=pumps.py
      - FLASK_DEBUG=1
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - DATADOG_SERVICE_NAME=pumps-service
      - DATADOG_TRACE_AGENT_HOSTNAME=agent
      # - DD_LOGS_INJECTION=true
      # - DD_ANALYTICS_ENABLED=true
    # image: "brettlangdon/distributed-tracing-workshop-pumps-api:latest"
    build: ./pumps-api
    command: ddtrace-run flask run --port=5001 --host=0.0.0.0
    ports:
      - "5001:5001"
    volumes:
      - "./pumps-api:/app"
    depends_on:
      - agent
      - db
    labels:
      com.datadoghq.ad.logs: '[{"source": "python", "service": "pumps-service"}]'

  redis:
    image: "redis:5-alpine"
    labels:
      com.datadoghq.ad.logs: '[{"source": "redis", "service": "redis"}]'

  sensors:
    environment:
      - FLASK_APP=sensors.py
      - FLASK_DEBUG=1
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - DATADOG_SERVICE_NAME=sensors-api
      - DATADOG_TRACE_AGENT_HOSTNAME=agent
      # - DD_LOGS_INJECTION=true
      # - DD_ANALYTICS_ENABLED=true
    # image: "brettlangdon/distributed-tracing-workshop-sensors:latest"
    build: ./sensors
    command: ddtrace-run flask run --port=5002 --host=0.0.0.0
    ports:
      - "5002:5002"
    volumes:
      - "./sensors:/app"
    depends_on:
      - agent
      - db
    labels:
      com.datadoghq.ad.logs: '[{"source": "python", "service": "sensors-api"}]'

  db:
    image: postgres:11-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    labels:
      com.datadoghq.ad.logs: '[{"source": "postgres", "service": "postgres"}]'
